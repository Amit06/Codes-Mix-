/*
 *  @author Amit
 */

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.InputMismatchException;

class Trump
{
	public static void main(String[] args)
	{
		InputReader in = new InputReader(System.in);
		OutputWriter out = new OutputWriter(System.out);
		int tc=in.readInt();
		for(int test=0;test<tc;test++)
		{
			
			int n=in.readInt();
			int p=in.readInt();
			int q=in.readInt();
			int i=0;
			int ctr=0;
			int[] arr=IOUtils.readIntArray(in, n);
			int[] rem=new int[n];
			int ec,oc;
			ec=oc=0;
			for(int j=0;j<n;j++){
				rem[j]=arr[j]%2;
				if (rem[j]==0)
			
			Arrays.sort(arr);
			while(i<n && (p>0 || q>0) )
					{
						boolean flag=false;
						if (arr[i]%2==0)
						{
							if(arr[i]/2<=q)
							{
								q-=arr[i]/2;
								arr[i]=0;
							}
							else
							{
								q=0;
								arr[i]=arr[i]-2*q;
							}
							if (arr[i]==0)
								{
								flag=true;
								}
						}
						if (!flag)
						{
							int ch=arr[i]/2;
							if(ch<=q)
							{
								q-=ch;
								arr[i]=1;
							}
							else
							{
								q=0;
								arr[i]=arr[i]-2*q;
							}
							if (p>0)
							{
								p-=1;
								arr[i]-=1;
							}
							
						}
						if (arr[i]==0){
							i++;
							ctr++;
							
						}
						
						
					}
			out.printLine(ctr);
					
		}
		out.flush();
	}
}


class InputReader {
	
	private InputStream stream;
	private byte[] buf = new byte[1024];
	private int curChar;
	private int numChars;
	private SpaceCharFilter filter;
	
	public InputReader(InputStream stream) {
		this.stream = stream;
	}
	
	public int read() {
		if (numChars == -1)
			throw new InputMismatchException();
		if (curChar >= numChars) {
			curChar = 0;
			try {
				numChars = stream.read(buf);
			} catch (IOException e) {
				throw new InputMismatchException();
			}
			if (numChars <= 0)
				return -1;
		}
		return buf[curChar++];
	}
	
	public int readInt() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = read();
		}
		int res = 0;
		do {
			if (c < '0' || c > '9')
				throw new InputMismatchException();
			res *= 10;
			res += c - '0';
			c = read();
		} while (!isSpaceChar(c));
		return res * sgn;
	}
	
	public String readString() {
		int c = read();
		while (isSpaceChar(c))
			c = read();
		StringBuilder res = new StringBuilder();
		do {
			res.appendCodePoint(c);
			c = read();
		} while (!isSpaceChar(c));
		return res.toString();
	}
	
	public boolean isSpaceChar(int c) {
		if (filter != null)
			return filter.isSpaceChar(c);
		return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
	}
	
	public String next() {
		return readString();
	}
	
	public interface SpaceCharFilter {
		public boolean isSpaceChar(int ch);
	}
}

class OutputWriter {
	private final PrintWriter writer;
	
	public OutputWriter(OutputStream outputStream) {
		writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));
	}
	
	public OutputWriter(Writer writer) {
		this.writer = new PrintWriter(writer);
	}
	
	public void print(Object... objects) {
		for (int i = 0; i < objects.length; i++) {
			if (i != 0)
				writer.print(' ');
			writer.print(objects[i]);
		}
	}
	
	public void printLine(Object... objects) {
		print(objects);
		writer.println();
	}
	
	public void close() {
		writer.close();
	}
	
	public void flush() {
		writer.flush();
	}
	
}

class IOUtils {
	
	public static int[] readIntArray(InputReader in, int size) {
		int[] array = new int[size];
		for (int i = 0; i < size; i++)
			array[i] = in.readInt();
		return array;
	}
	
}

